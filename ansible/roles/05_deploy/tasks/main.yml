---
#-------
#メモリが足りずbudle installがフリーズするのでswap領域を作成する
#-------

- name: Check swapfile
  become_user: root
  shell: |
   sudo swapon --show | grep /swapfile
  register: swapfile_check
  changed_when: false
  ignore_errors: true

- name: create swapfile and swap area
  become_user: root
  shell: |
    sudo fallocate -l 2G /swapfile
  args:
    creates: /swapfile

- name: Set correct swapfile permissions
  become_user: root
  shell: |
    sudo chmod 600 /swapfile
  changed_when: false

- name: Check created swapfile
  become_user: root
  stat: 
    path: /swapfile
  register: swapfile_stat

- name: make swap area
  become_user: root
  shell: |
    sudo mkswap /swapfile
  register: swapfile_mkswap
  when: swapfile_check is failed

- name: Check swapfile is already enabled
  become_user: root
  shell: |
   sudo swapon --show
  register: swapfile_swapon_needed
  changed_when: false
  ignore_errors: true

- name: enble swapfile
  become_user: root
  shell: |
    sudo swapon /swapfile
  when: "'/swapfile' not in swapfile_swapon_needed.stdout"  # 標準出力でswapfileが無い場合実行する

- name: swapfile mount
  become: true
  mount:
    name: none
    src: /swapfile
    fstype: swap
    opts: sw
    passno: 0
    dump: 0
    state: present


- name: installed nginx
  become: true
  shell: nginx -version 
  register: nginx_check
  changed_when: false
  ignore_errors: true

- name: Enable nginx1 repository
  become: true
  command:
    cmd: amazon-linux-extras install -y nginx1
  when: nginx_check is failed
  register:  nginx_install

- name: debug_nginx_install
  become: true
  debug:
    msg: "{{ nginx_install }}"
   
- name: development.rb copy 
  become: true
  template:
    src: development.rb.j2
    dest: "{{ app_dir }}/config/environments/development.rb"

- name: nginx configfile fo copy 
  become: true
  copy:
    src: roles/05_deploy/templates/puma.conf.j2
    dest: /etc/nginx/conf.d/puma.conf
    

- name: deploy environment setup
  shell: |
    bash -lc "bin/setup"
  args:
    chdir: "{{ app_dir }}"
  ignore_errors: true



- name: rails assets:precompile
  shell: |
    bash -lc "rails assets:precompile"
  args:
    chdir: "{{ app_dir }}"
  ignore_errors: true
  


