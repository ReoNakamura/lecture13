version: 2.1
orbs:
  aws-cli: circleci/aws-cli@4.1.3
  aws-cloudformation: orbss/aws-cloudformation@0.1.6
  ansible-playbook: orbss/ansible-playbook@0.0.5


  
jobs:
  cfn-lint:
    docker:
      - image: cimg/python:3.11.0
    steps:
      - checkout
      - run: python --version
      - run: pip install --upgrade pip
      - run: pip --version
      - run: pip install cfn-lint
      - run:
          name: run cfn-lint
          command: |
            cfn-lint -i W3002 -t cloudformation/*.yml

  execute-cloudformation:
    executor: aws-cli/default
    steps:
      - checkout
      - aws-cli/setup:
          aws_access_key_id: AWS_ACCESS_KEY_ID
          aws_secret_access_key: AWS_SECRET_ACCESS_KEY
          region: AWS_DEFAULT_REGION
      - run:
          name: cloudformation deploy
          command: |
            set -x 
            aws cloudformation deploy --template-file cloudformation/VPC.yml --stack-name circleci-test-VPC
            aws cloudformation deploy --template-file cloudformation/EC2-RDS.yml --stack-name circleci-test-EC2-RDS --capabilities CAPABILITY_NAMED_IAM
            aws cloudformation deploy --template-file cloudformation/S3.yml --stack-name circleci-test-S3 --capabilities CAPABILITY_NAMED_IAM

      - run:
          name: 環境変数の設定
          command: |
            # Define variables
            # スタックの名前とシクレットマネージャーの名前を設定
            STACK_NAME="circleci-test-EC2-RDS"  
            SECRET_NAME="MyRDSSecret"
            REGION="ap-northeast-1"
            EC2PublicIP=$(aws cloudformation describe-stacks --stack-name $STACK_NAME --query "Stacks[0].Outputs[?OutputKey=='EC2PublicIP'].OutputValue" --output text --region $REGION)
            echo "export EC2PublicIP=$EC2PublicIP" >> .env_var
            # RDSのエンドポイントを環境変数に設定
            RDS_ENDPOINT=$(aws cloudformation describe-stacks --stack-name $STACK_NAME --query "Stacks[0].Outputs[?OutputKey=='RDSInstanceEndpoint'].OutputValue" --output text --region $REGION)
            #出力した変数を環境変数に設定
            echo "export RDS_ENDPOINT=$(printf '%q' $RDS_ENDPOINT)" >> .env_var

            RDS_PASSWORD=$(aws secretsmanager get-secret-value --secret-id $SECRET_NAME --query "SecretString" --output text --region $REGION | jq -r '.password')
            echo "export RDS_PASSWORD=$(printf '%q' $RDS_PASSWORD)" >> .env_var
            DNS_NAME=$(aws cloudformation describe-stacks --stack-name $STACK_NAME --query "Stacks[0].Outputs[?OutputKey=='ALBEndpoint'].OutputValue" --output text --region $REGION)
            echo "export DNS_NAME=$DNS_NAME" >> .env_var
      - run:
          name: check environment variables
          command: |
            source .env_var
            echo "EC2PublicIP: $EC2PublicIP"
            echo "RDS_ENDPOINT: $RDS_ENDPOINT"
            echo "RDS_PASSWORD: $RDS_PASSWORD"
            echo "DNS_NAME: $DNS_NAME"
      - persist_to_workspace:
          root: .
          paths:
            - .env_var
  execute-ansible:
    executor: ansible-playbook/default
    docker:
      - image: cimg/python:3.10
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run:
          name: python -m pip install --upgrade pip
          command: python -m pip install --force-reinstall --upgrade pip
      - add_ssh_keys: 
          fingerprints:
            - SHA256:z6G5uUi9DsBbxk/aZ16M3ZjLEcZlKCeurc1XD88gndw
      - run: 
          name: install ansible
          command: pip install ansible==2.10.7
      - run:
          name: Install community.mysql collection
          command: |
            ansible-galaxy collection install community.mysql -vvv
      - run:
          name: Use Environment Variable
          command: |
            source .env_var
            echo $RDS_ENDPOINT
            echo $RDS_PASSWORD
            echo $EC2PublicIP
            echo $DNS_NAME
      - run:
          name: Replacing environment variables in Sed
          command: |
            source .env_var
            echo $EC2PublicIP
            sed -i "s/EC2PublicIP/${EC2PublicIP}/g" ansible/inventory
            cat ansible/inventory
            sed -i "s/RDS_ENDPOINT/${RDS_ENDPOINT}/g" ansible/playbook.yml
            sed -i "s/RDS_PASSWORD/${RDS_PASSWORD}/g" ansible/playbook.yml
            sed -i "s/DNS_NAME/${DNS_NAME}/g" ansible/playbook.yml
            cat ansible/playbook.yml
      - ansible-playbook/playbook:
          playbook: ansible/playbook.yml
          playbook-options: '-u ec2-user -i ansible/inventory -e "RDS_PASSWORD=$RDS_PASSWORD" --private-key  ~/AWS-access/lecture13.pem'
workflows:
  raisetech:
    jobs:
      - cfn-lint
      - execute-cloudformation
      - execute-ansible:
          requires:
            - execute-cloudformation

